// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	core "github.com/ManuelLecaro/prueba_tecnica_dates/internal/domain/core"
	mock "github.com/stretchr/testify/mock"
)

// HolidayRepository is an autogenerated mock type for the HolidayRepository type
type HolidayRepository struct {
	mock.Mock
}

// GetHoliday provides a mock function with given fields: ctx, holiday
func (_m *HolidayRepository) GetHoliday(ctx context.Context, holiday core.Holiday) []*core.Holiday {
	ret := _m.Called(ctx, holiday)

	var r0 []*core.Holiday
	if rf, ok := ret.Get(0).(func(context.Context, core.Holiday) []*core.Holiday); ok {
		r0 = rf(ctx, holiday)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*core.Holiday)
		}
	}

	return r0
}

type mockConstructorTestingTNewHolidayRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewHolidayRepository creates a new instance of HolidayRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHolidayRepository(t mockConstructorTestingTNewHolidayRepository) *HolidayRepository {
	mock := &HolidayRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
